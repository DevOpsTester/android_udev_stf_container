#!/bin/sh

#DEV_PCI_PATH=/devices/pci0000:00/0000:00:11.0/0000:02:03.0/usb1/1-2
DEV_PCI_PATH=${1%/*}

PRODUCT=`udevadm info --attribute-walk -p $DEV_PCI_PATH | grep ATTR{product} | cut -d '"' -f 2`

if [ "$PRODUCT"x = "Android"x ];
then
    DEV_BUS_USB_PATH=`udevadm info -q property -p $DEV_PCI_PATH | grep DEVNAME | awk -F"=" '{print $NF}'`
    BUSNUM=`udevadm info -q property -p $DEV_PCI_PATH | grep BUSNUM | awk -F"=" '{print $NF}'`
    DEVNUM=`udevadm info -q property -p $DEV_PCI_PATH | grep DEVNUM | awk -F"=" '{print $NF}'`

    DEV_ID_MODEL=`udevadm info -q property -p $DEV_PCI_PATH | grep ID_MODEL= | awk -F"=" '{print $NF}'`
    DEV_ID_SERIAL=`udevadm info -q property -p $DEV_PCI_PATH | grep ID_SERIAL= | awk -F"=" '{print $NF}'`
    DEV_ID_SERIAL_SHORT=`udevadm info -q property -p $DEV_PCI_PATH | grep ID_SERIAL_SHORT | awk -F"=" '{print $NF}'`
    DEV_MAJOR=`udevadm info -q property -p $DEV_PCI_PATH | grep MAJOR | awk -F"=" '{print $NF}'`
    DEV_MINOR=`udevadm info -q property -p $DEV_PCI_PATH | grep MINOR | awk -F"=" '{print $NF}'`
    DEV_ID_MODEL_ID=`udevadm info -q property -p $DEV_PCI_PATH | grep ID_MODEL_ID | awk -F"=" '{print $NF}'`
    DEV_ID_VENDOR_ID=`udevadm info -q property -p $DEV_PCI_PATH | grep ID_VENDOR_ID | awk -F"=" '{print $NF}'`



    #DEV_CONTAINER_NAME="${DEV_ID_MODEL}_${DEV_ID_SERIAL_SHORT}_"`echo $DEV_PCI_PATH | sed -e 's/\//A/g' -e 's/:/B/g' -e 's/\./C/g'`
    DEV_CONTAINER_NAME="Android_"`echo $DEV_PCI_PATH | sed -e 's/\//A/g' -e 's/:/B/g' -e 's/\./C/g'`
    DEV_CONTAINER_State=`docker inspect --format='{{ .State.Running }}' $DEV_CONTAINER_NAME`
    if [ "$DEV_CONTAINER_State"x = "true"x ];
    then
        echo "[Container]$DEV_CONTAINER_NAME is Running!"
    else
        #create one container mapping to this android device
	echo `date "+%Y-%m-%d_%T"`"[Container]$DEV_CONTAINER_NAME will be created for ${DEV_ID_MODEL}_${DEV_ID_SERIAL_SHORT}" >> /tmp/add
        docker run -d -it --name=$DEV_CONTAINER_NAME -v /etc/apt:/etc/apt nuaays/android_stf
        docker inspect --format='{{.State.Running}}' $DEV_CONTAINER_NAME
        docker-enter $DEV_CONTAINER_NAME mkdir -p /dev/bus/usb/$BUSNUM
        docker-enter $DEV_CONTAINER_NAME mknod --mode 0666 /dev/bus/usb/$BUSNUM/$DEVNUM c $DEV_MAJOR $DEV_MINOR
        
        DEV_CONTAINER_ID=`docker inspect --format='{{.ID}}' $DEV_CONTAINER_NAME`
        echo "c $DEV_MAJOR:$DEV_MINOR rwm" > /sys/fs/cgroup/devices/docker/devices.allow
        echo "c $DEV_MAJOR:$DEV_MINOR rwm" > /sys/fs/cgroup/devices/docker/$DEV_CONTAINER_ID/devices.allow
    fi

else
    exit 1
fi



